Python Tutorial for Beginners - Telusko - Naveen Reddy
https://www.youtube.com/playlist?list=PLsyeobzWxl7poL9JTVyndKe62ieoN-MZ3

Interpeter
IDE - Pycham
IDLE - command prompt for python
- To do some math operation on IDLE
2+3, 3-1, 3*2, 4/2(return float value ie 2.0), 4//2(return integer valu), 2**3(return exponential value ie 8), 5%2(return remainder ie 1)
'veera', print('veera'), print("veera's laptop"),print('veera "laptop" '), 'veera' +'veera', 3*'veera'(print veera 10 times), \n
name='youtube',name[0],name[0:],name[:4],name[2:4], len(name), num[0,1,2,3,4](you can iterate 0 to 4),
num[-5,-4,-3,-2,-1](you can iterate reverse -1 to -5)
name =['abc','def','dfds']
mix =[2,'abcd',4.5,2.0]
misl =[name,mix]  (print misl mixture of name, mix lists)
nums =[1,2,3,4,5,6,7,8,9,10]  -- list is mutable means its can chage/update values
num.remove(3) (you can pass number)
num.pop(3) (remove the index position)
num.pop(); (remove the last position value ie: 10)
del num(2:) (it will delete all the elements after 2)
nums.extend([11,12,13,14,15])
min(nums),max(nums),sum(nums),nums.sort();
// list is a mutable  
// tuple  is a immutable object
ex: tup = (5,10,15,20,25)
tup[1]
tup[0]=50  // we will get error
s ={1,5,11,10,25,12} //set it will contain unique values - set
s.add, s.remove, s.update
list - orderded elements. maintain sequence
set - not maintain the order. not maintain sequence
Dictionary:
data ={1:'first',2:'second',3:'third',5:'five'}
to-retrive - data, data.get(1),data[2],print(data.get(3))
keys = ['suni','mega','veera']
values = ['mech','kinder','java']
data = dict(zip(keys,values))
to-retrive - data, data.get(1),data[2],print(data.get(3))
add data - data['srav']='hr'
Dictiornay contain list and list contain again dictionary
prog ={'js':'Atom','cs':'vs','python':['pycham','sublime'],'java':{'jse','netbean','jee':'eclipse'}}
prog['js'],prog['python'],prog['python'][1],prog['java'],prog['java']['jse']

- how to set python in local command prompt
- set the path and script path in environment variable
ie: path = C:\Users\GSPANN Guest\AppData\Local\Programs\Python\Python38-32\
script path = C:\Users\GSPANN Guest\AppData\Local\Programs\Python\Python38-32\Scripts
go to cmd prompt type: python
now cmd prompt work as a python prompt.
>help()
help>topics
help>quit
>>>help("list")
// to get the addres
>>num =5
>>id(num)  // it will display the address of num variable
>>if you want to know the type of the variable
>>type(num )
ex: fl = 3.5
>>type(fl)
Different Data Types : None, numeric, List , Tuple, Set, String, Range, Dictionary (Set)
none == null in java
Numeric = int, float, complex , bool
num =2.5 (float), num = 5(int), num = 6+9j (complex)
a=5.6 , b = (int)a; // convert float value into integer
>> a>b // return bool means boolean value true/false.
lst = [5,3,4,6,7,8,9,0] //list
set = {1,4,5,7,8,9}//set unique
 >>type(set)
 tu=(1,2,46,5,33,33) //tuple
 str ='veera'  //string
 st ='a'  // we have string we dont have char
 // how to define range
 >>range(10)
 >>list(range(10))//output : 1 to 10
 >>list(range(2,11,2) // difference of 2 it print 2, 4 6 8 10
 >> d = {'mega':'ipad','veera':'iphone','suni':'samg'}
 >>d
 >>d.keys()
 >>d.values()
 >>d[mega]
 >>d.get('suni')
 
 Now operators
 Arithmetic operators, assignement op, relational op, logical operators, unary operators.
 x=3, x*=3 (x=x*3), x+=3 (x = x+3)
>> a,b = 5,6  we can do like this also
unary operator
n =7, n =-n, now the value of n is -7 
relational op
a<b // return true/false
a ==b // comparing values
a<=b , a>=b, a!=b

logical operators and or not
a = 5 b =4
a< 8 and b>5
a< 8 or b>5
>> x = True // x is trune
>> not x  // now not  

// how to covery binary to exha / decimal to binary
>>bin(25)  // out ob11001 decimal to binary
>>ob11001   >> binary to decial 
>>oct(25)  // 0o31
>>hex(25)  // 0x19
// config up arrow IDLE - config IDLE 
// video 18 need to start
Bitwise operators
~ complement - tidle operator
~12
o/p -13
bitwise & and |
12 & 13
o/p 12
12 | 13
XOR (^) operator
12 ^ 12
o/p 1
leftshift
10<<2
o/p : 40
10>>2
o/p : 2

Mathematical functions
import math
>> x = math.sqrt(25)
>>print x
>>> print(math.floor(2.9))
o/p 2
>>> print(math.floor(2.9))
o/p 3
>>> print(math.pow(3,2))
>>> help('math')

>>> programming
x = input("Enter 1st number")
a =int(x)
y = input("Enter 2nd number")
b =int(y)
z=a+b
print(z)
>>
import sys
x = int (sys.argv[1])
y = int (sys.argv[2])
z=x+y
print(z)
>>
ch = input("Enter char value ")[0]
print(ch)
>>
result = evalu(input('enter an expr'))  // enter expression 2 + 6 -1
print (result)
>>
r =0
if r ==0:
  print (hello)  // set of statments with annontation
  print (hello)
  
elif r==2:
  Print ("")

else r== 1:
  print (hello)  // set of statments with annontation
  print (hello)

 // to be cont video 30  #26

https://www.youtube.com/playlist?list=PLsyeobzWxl7poL9JTVyndKe62ieoN-MZ3


